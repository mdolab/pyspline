!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module pyspline ! in 
    interface  ! in :pyspline
        subroutine b2ink(x,nx,y,ny,fcn,ldf,kx,ky,tx,ty,bcoef,work,iflag) ! in :pyspline:b2ink.f
            real*8, intent(in), dimension(nx) :: x
            integer optional,check(len(x)>=nx),depend(x) :: nx=len(x)
            real*8, intent(in),dimension(ny) :: y
            integer optional,check(len(y)>=ny),depend(y) :: ny=len(y)
            real*8, intent(in), dimension(ldf,ny),depend(ny) :: fcn
            integer optional,check(shape(fcn,0)==ldf),depend(fcn) :: ldf=shape(fcn,0)
            integer, intent(in) :: kx
            integer, intent(in) :: ky
            real*8, intent(out),dimension(nx+kx) :: tx
            real*8, intent(out),dimension(ny+ky) :: ty
            real*8, intent(out), dimension(nx,ny),depend(nx,ny) :: bcoef
            real*8, optional, dimension(nx*ny + MAX(2*kx*(nx+1),2*ky*(ny+1))) ::work
            integer,optional,intent(in) :: iflag=0
        end subroutine b2ink
        
        function b2val(xval,yval,idx,idy,tx,ty,nx,ny,kx,ky,bcoef,work) ! in :pyspline:b2val.f
            real*8,intent(in) :: xval
            real*8,intent(in) :: yval
            integer,intent(in) :: idx
            integer,intent(in) :: idy
            real*8,intent(in), dimension(nx+kx) :: tx
            real*8,intent(in), dimension(ny+ky) :: ty
            integer optional,check(shape(bcoef,0)==nx),depend(bcoef) :: nx=shape(bcoef,0)
            integer optional,check(shape(bcoef,1)==ny),depend(bcoef) :: ny=shape(bcoef,1)
            integer,intent(in) :: kx
            integer,intent(in) :: ky
            real*8,intent(in), dimension(nx,ny) :: bcoef
            real*8,optional, dimension(3*MAX(kx,ky)+ky) :: work
            real*8,intent(out) :: b2val
        end function b2val

        subroutine bintk(x,y,t,n,k,bcoef,q,work) ! in bintk.f
          real*8,intent(in), dimension(n) :: x
          real*8,intent(in), dimension(n),depend(n) :: y
          real*8,intent(in), dimension(n+k) :: t
          integer optional,check(len(x)>=n),depend(x) :: n=len(x)
          integer,intent(in) :: k
          real*8,intent(out), dimension(n),depend(n) :: bcoef
          real*8,optional, dimension((2*k-1)*n) :: q
          real*8,optional, dimension(2*k),depend(k) :: work
        end subroutine bintk


        function bvalu(t,a,n,k,ideriv,x,inbv,work) ! in bvalu.f
          real*8,intent(in), dimension(n+k),depend(k) :: t
          real*8,intent(in), dimension(n) :: a
          integer optional,check(len(a)>=n),depend(a) :: n=len(a)
          integer ,intent(in):: k
          integer ,intent(in):: ideriv
          real*8 ,intent(in):: x
          integer,optional,intent(out) :: inbv
          real*8,optional, dimension(3*k),depend(k) :: work
          real*8, intent(out):: bvalu
        end function bvalu

        subroutine bint4(x,y,ndata,ibcl,ibcr,fbcl,fbcr,kntopt,t,bcoef,n,k,w) ! in bint4.f
          real*8,intent(in), dimension(ndata) :: x
          real*8,intent(in), dimension(ndata) :: y
          integer,optional,check(len(x)>=ndata),depend(x) :: ndata=len(x)
          integer,intent(in) :: ibcl
          integer,intent(in) :: ibcr
          real*8,intent(in) :: fbcl
          real*8,intent(in) :: fbcr
          integer,intent(in) :: kntopt
          real*8,intent(out), dimension(ndata+6) :: t
          real*8,intent(out), dimension(ndata+2) :: bcoef
          integer,intent(out) :: n
          integer,intent(out) :: k
          real*8,optional, dimension(5*(ndata+2)) :: w
        end subroutine bint4


     end interface
end python module pyspline

! This file was auto-generated with f2py (version:2_4422).
! See http://cens.ioc.ee/projects/f2py2e/
